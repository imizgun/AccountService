version: '3.4'

services:
  accountservice:
    image: ${DOCKER_REGISTRY-}accountservice
    build:
      context: .
      dockerfile: AccountService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - JwtSettings__Authority=http://keycloak:9999/realms/account_service
      - JwtSettings__Audience=account
    ports:
      - "46320:80"
    depends_on:
      keycloak:
          condition: service_started
      db:
        condition: service_healthy
      rabbitmq:
          condition: service_healthy  

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-debug
    command: start-dev --import-realm
    ports:
      - "9999:9999"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 9999
      KC_HOSTNAME: keycloak
      KC_HOSTNAME_URL: http://keycloak:9999
      KC_HOSTNAME_ADMIN_URL: http://localhost:9999
      KC_HOSTNAME_STRICT: false
    volumes:
      - ./account_service-realm.json:/opt/keycloak/data/import/account_service-realm.json
        
  
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: accountService
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - "15672:15672"
      - "25672:25672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  keycloak-data:
  pgdata:
  rabbitmq-data:

networks:
  app-network:
    driver: bridge